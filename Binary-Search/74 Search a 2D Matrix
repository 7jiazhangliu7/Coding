//https://leetcode.com/problems/search-a-2d-matrix/

public class Solution {
    public boolean searchMatrix(int[][] matrix, int target) {
        if(matrix == null || matrix.length == 0 || matrix[0].length == 0) {
            return false;
        }
        
        int start = findRow(matrix, target);
        
        int rowS = 0, rowE = matrix[0].length-1;
        int mid = 0;
        
        while(rowS+1 < rowE) {
            mid = (rowS+rowE)/2;
            if (matrix[start][mid] < target) {
                rowS = mid;
            } else if(matrix[start][mid] > target) {
                rowE = mid;
            } else {
                return true;
            }
        }
        
        if(matrix[start][rowS] == target || matrix[start][rowE] == target) return true;
        
        return false;
    }
    
    public int findRow(int[][] matrix, int target) {
        int start = 0, end = matrix.length-1;
        int mid = 0;
        while(start+1 < end) {
            mid = (start+end)/2;
            if(matrix[mid][0] < target) {
                start = mid;
            } else {
                end = mid;
            } 
        }
        
        if (matrix[end][0] > target) {
            return start;
        } else {
            return end;
        }
    }
}

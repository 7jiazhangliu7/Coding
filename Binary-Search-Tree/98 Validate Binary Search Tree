https://leetcode.com/problems/validate-binary-search-tree/

O(N) time because we have to check every node in the tree
O(1) space if ignore system stack for recursion

/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isValidBST(TreeNode root) {
        if(root == null) return true;
        
        return helper(root, Long.MIN_VALUE, Long.MAX_VALUE);
    }
    //这里需要用long，用integer会有错误的结果if有value = Integer.MIN_VALUE 或者 Integer.MAX_VALUE
    public boolean helper(TreeNode root, long min, long max) {
        if(root == null) return true;
        
        if(root.val <= min || root.val >= max) {
            return false;
        }
        
        return helper(root.left, min, root.val) && helper(root.right, root.val, max);
    }
}

// https://leetcode.com/problems/climbing-stairs/

public class Solution {
    // O(n) time O(1) space
    public int climbStairs(int n) {
        if(n <= 0) return -1;
        if(n == 1 || n == 2) return n;
        
        int a = 1, b = 1;
        int sum = a+b;
        for(int i = 2; i < n+1; i++) {
            sum = a + b;
            a = b;
            b = sum;
        }
        
        return sum;
    }
    
    /* O(n) space O(n) time
    public int climbStairs(int n) {
        if(n <= 0) return -1;
        
        int[] step = new int[n+1];
        step[0] = 1;
        step[1] = 1;
        
        for(int i = 2; i < n+1; i++) {
            step[i] = step[i-1] + step[i-2];
        }
        
        return step[n];
    }
    */
}
